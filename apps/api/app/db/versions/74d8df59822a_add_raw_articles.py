"""add raw articles

Revision ID: 74d8df59822a
Revises: 9c1a7ad9504e
Create Date: 2025-10-16 11:30:33.271612

"""
from typing import Sequence, Union
import sqlmodel
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '74d8df59822a'
down_revision: Union[str, Sequence[str], None] = '9c1a7ad9504e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('feed_url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('kind', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('cadence_minutes', sa.Integer(), nullable=False),
    sa.Column('timeout_sec', sa.Integer(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('last_run_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sources_created_at'), 'sources', ['created_at'], unique=False)
    op.create_index(op.f('ix_sources_last_run_at'), 'sources', ['last_run_at'], unique=False)
    op.create_index(op.f('ix_sources_slug'), 'sources', ['slug'], unique=True)
    op.create_index(op.f('ix_sources_updated_at'), 'sources', ['updated_at'], unique=False)
    op.create_table('raw_articles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('raw_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('payload_json', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('fetched_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_raw_articles_fetched_at'), 'raw_articles', ['fetched_at'], unique=False)
    op.create_index(op.f('ix_raw_articles_raw_id'), 'raw_articles', ['raw_id'], unique=False)
    op.create_index(op.f('ix_raw_articles_source_id'), 'raw_articles', ['source_id'], unique=False)
    op.create_index(op.f('ix_raw_articles_url'), 'raw_articles', ['url'], unique=False)
    op.drop_index(op.f('ix_source_created_at'), table_name='source')
    op.drop_index(op.f('ix_source_last_run_at'), table_name='source')
    op.drop_index(op.f('ix_source_slug'), table_name='source')
    op.drop_index(op.f('ix_source_updated_at'), table_name='source')
    op.drop_table('source')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('source',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('slug', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('feed_url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('kind', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('enabled', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('cadence_minutes', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('timeout_sec', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('max_retries', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('priority', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('last_run_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('notes', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('source_pkey'))
    )
    op.create_index(op.f('ix_source_updated_at'), 'source', ['updated_at'], unique=False)
    op.create_index(op.f('ix_source_slug'), 'source', ['slug'], unique=True)
    op.create_index(op.f('ix_source_last_run_at'), 'source', ['last_run_at'], unique=False)
    op.create_index(op.f('ix_source_created_at'), 'source', ['created_at'], unique=False)
    op.drop_index(op.f('ix_raw_articles_url'), table_name='raw_articles')
    op.drop_index(op.f('ix_raw_articles_source_id'), table_name='raw_articles')
    op.drop_index(op.f('ix_raw_articles_raw_id'), table_name='raw_articles')
    op.drop_index(op.f('ix_raw_articles_fetched_at'), table_name='raw_articles')
    op.drop_table('raw_articles')
    op.drop_index(op.f('ix_sources_updated_at'), table_name='sources')
    op.drop_index(op.f('ix_sources_slug'), table_name='sources')
    op.drop_index(op.f('ix_sources_last_run_at'), table_name='sources')
    op.drop_index(op.f('ix_sources_created_at'), table_name='sources')
    op.drop_table('sources')
    # ### end Alembic commands ###
